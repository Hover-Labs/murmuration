parameter (or (or (or (pair %approve (address %spender) (nat %value)) (or (unit %disableMinting) (pair %getAdministrator unit (contract (option address))))) (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (or (pair %getBalance address (contract nat)) (pair %getPriorBalance (pair (address %address) (nat %level)) (contract (pair (address %address) (pair (nat %level) (nat %result)))))))) (or (or (pair %getTotalSupply unit (contract nat)) (or (pair %mint (address %address) (nat %value)) (option %setAdministrator address))) (or (or (bool %setPause) (pair %transfer (address %from) (pair (address %to) (nat %value)))) (or (pair %updateContractMetadata string bytes) (pair %updateTokenMetadata (nat %token_id) (map %token_info string bytes))))));
storage   (pair (pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))));
code
  {
    # Private variable: writeCheckpoint # pair @parameter @storage
    LAMBDA
      (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
      (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
      {
        UNPAIR 3;   # pair address (pair nat nat) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        SWAP;       # list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        # if _x0.numCheckpoints == 0: # list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        PUSH nat 0; # nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        DUP 3;      # pair address (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        GET 3;      # nat : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        COMPARE;    # int : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        EQ;         # bool : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        IF
          {
            # self.data.checkpoints[(_x0.checkpointedAddress, 0)] = sp.record(fromBlock = sp.level, balance = _x0.newBalance) # list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            DIG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation : pair address (pair nat nat)
            UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            SWAP;       # pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            UNPAIR;     # big_map address nat : pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            SWAP;       # pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            UNPAIR;     # big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            DUP 7;      # pair address (pair nat nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            GET 4;      # nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            LEVEL;      # @level : nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            PAIR;       # pair @level nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            SOME;       # option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            PUSH nat 0; # nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            DUP 9;      # pair address (pair nat nat) : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            CAR;        # address : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            PAIR;       # pair address nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            UPDATE;     # big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            PAIR;       # pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            SWAP;       # big_map address nat : pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            PAIR;       # pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            SWAP;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
            SWAP;       # pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            # self.data.numCheckpoints[_x0.checkpointedAddress] = _x0.numCheckpoints + 1 # pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            UNPAIR;     # pair bool (big_map address nat) : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            UNPAIR;     # bool : big_map address nat : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            SWAP;       # big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            PUSH nat 1; # nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            DUP 7;      # pair address (pair nat nat) : nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            GET 3;      # nat : nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            ADD;        # nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            SOME;       # option nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
            DIG 6;      # pair address (pair nat nat) : option nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
            CAR;        # address : option nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
            UPDATE;     # big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
            SWAP;       # bool : big_map address nat : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
            PAIR;       # pair bool (big_map address nat) : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
            PAIR;       # pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
            SWAP;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
            PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
            SWAP;       # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            # if self.data.checkpoints[(_x0.checkpointedAddress, sp.as_nat(_x0.numCheckpoints - 1))].fromBlock == sp.level: # list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            LEVEL;      # @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 4;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 5;      # big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            PUSH nat 1; # nat : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 5;      # pair address (pair nat nat) : nat : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET 3;      # nat : nat : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            SUB;        # int : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            ISNAT;      # option nat : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_NONE
              {
                PUSH int 118; # int : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }
              {}; # @some : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            DUP 5;      # pair address (pair nat nat) : @some : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # address : @some : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            PAIR;       # pair address @some : big_map (pair address nat) (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            GET;        # option (pair nat nat) : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF_NONE
              {
                PUSH int 118; # int : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                FAILWITH;   # FAILED
              }
              {}; # @some : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            CAR;        # nat : @level : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            COMPARE;    # int : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            EQ;         # bool : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
            IF
              {
                # self.data.checkpoints[(_x0.checkpointedAddress, sp.as_nat(_x0.numCheckpoints - 1))] = sp.record(fromBlock = sp.level, balance = _x0.newBalance) # list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                DIG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation : pair address (pair nat nat)
                UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                SWAP;       # pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                UNPAIR;     # big_map address nat : pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                SWAP;       # pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                UNPAIR;     # big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                DUP 7;      # pair address (pair nat nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                GET 4;      # nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                LEVEL;      # @level : nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                PAIR;       # pair @level nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                SOME;       # option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                PUSH nat 1; # nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                DUP 9;      # pair address (pair nat nat) : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                GET 3;      # nat : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                SUB;        # int : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                ISNAT;      # option nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                IF_NONE
                  {
                    PUSH int 119; # int : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                DIG 8;      # pair address (pair nat nat) : @some : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                CAR;        # address : @some : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                PAIR;       # pair address @some : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                UPDATE;     # big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                PAIR;       # pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                SWAP;       # big_map address nat : pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                PAIR;       # pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                SWAP;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
                SWAP;       # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                SWAP;       # pair address (pair nat nat) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                # if self.data.checkpoints[(_x0.checkpointedAddress, sp.as_nat(_x0.numCheckpoints - 1))].balance != _x0.newBalance: # pair address (pair nat nat) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                DUP;        # pair address (pair nat nat) : pair address (pair nat nat) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                DUG 2;      # pair address (pair nat nat) : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                GET 4;      # nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                DUP 4;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                GET 5;      # big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                PUSH nat 1; # nat : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                DUP 5;      # pair address (pair nat nat) : nat : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                GET 3;      # nat : nat : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                SUB;        # int : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                ISNAT;      # option nat : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF_NONE
                  {
                    PUSH int 122; # int : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                DUP 5;      # pair address (pair nat nat) : @some : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                CAR;        # address : @some : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                PAIR;       # pair address @some : big_map (pair address nat) (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                GET;        # option (pair nat nat) : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF_NONE
                  {
                    PUSH int 122; # int : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                CDR;        # nat : nat : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                COMPARE;    # int : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                NEQ;        # bool : list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                IF
                  {
                    # self.data.checkpoints[(_x0.checkpointedAddress, _x0.numCheckpoints)] = sp.record(fromBlock = sp.level, balance = _x0.newBalance) # list operation : pair address (pair nat nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation : pair address (pair nat nat)
                    UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    SWAP;       # pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    UNPAIR;     # big_map address nat : pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    SWAP;       # pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    UNPAIR;     # big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    DUP 7;      # pair address (pair nat nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    GET 4;      # nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    LEVEL;      # @level : nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    PAIR;       # pair @level nat : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    SOME;       # option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    DIG 7;      # pair address (pair nat nat) : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                    DUP;        # pair address (pair nat nat) : pair address (pair nat nat) : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                    GET 3;      # nat : pair address (pair nat nat) : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                    SWAP;       # pair address (pair nat nat) : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                    DUP;        # pair address (pair nat nat) : pair address (pair nat nat) : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                    DUG 9;      # pair address (pair nat nat) : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    CAR;        # address : nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    PAIR;       # pair address nat : option (pair @level nat) : big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    UPDATE;     # big_map (pair address nat) (pair nat nat) : big_map string bytes : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    PAIR;       # pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : big_map address nat : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    SWAP;       # big_map address nat : pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    PAIR;       # pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    SWAP;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : pair address (pair nat nat)
                    SWAP;       # pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    # self.data.numCheckpoints[_x0.checkpointedAddress] = _x0.numCheckpoints + 1 # pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    UNPAIR;     # pair bool (big_map address nat) : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    UNPAIR;     # bool : big_map address nat : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    SWAP;       # big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    PUSH nat 1; # nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    DUP 7;      # pair address (pair nat nat) : nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    GET 3;      # nat : nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    ADD;        # nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    SOME;       # option nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation : pair address (pair nat nat)
                    DIG 6;      # pair address (pair nat nat) : option nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
                    CAR;        # address : option nat : big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
                    UPDATE;     # big_map address nat : bool : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
                    SWAP;       # bool : big_map address nat : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
                    PAIR;       # pair bool (big_map address nat) : pair bool (pair (big_map nat (pair nat (map string bytes))) nat) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
                    PAIR;       # pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : list operation
                    SWAP;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation
                    PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : list operation
                    SWAP;       # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    SWAP;       # pair address (pair nat nat) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DROP;       # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
              }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
          }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        UNIT;       # unit : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
        PAIR 3;     # pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))
      }; # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair @parameter @storage
    SWAP;       # pair @parameter @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
    UNPAIR;     # @parameter : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%approve : @storage
                DROP;       # @parameter%approve : @storage
                SWAP;       # @storage : @parameter%approve
                # == approve ==
                # if ~ (self.data.balances.contains(sp.sender)): # @storage : @parameter%approve
                DUP;        # @storage : @storage : @parameter%approve
                DUG 2;      # @storage : @parameter%approve : @storage
                CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%approve : @storage
                GET 3;      # big_map address nat : @parameter%approve : @storage
                SENDER;     # @sender : big_map address nat : @parameter%approve : @storage
                MEM;        # bool : @parameter%approve : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%approve
                    # self.data.balances[sp.sender] = 0 # @storage : @parameter%approve
                    UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    UNPAIR;     # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SWAP;       # pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    PUSH (option nat) (Some 0); # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SENDER;     # @sender : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SWAP;       # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    # self.data.approvals[sp.sender] = {} # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    PUSH (option (map address nat)) (Some {}); # option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SENDER;     # @sender : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%approve
                    SWAP;       # @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }; # @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%approve
                # sp.verify(~ self.data.paused, 'PAUSED') # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%approve
                DUP;        # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%approve
                DUG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                GET 5;      # bool : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                IF
                  {
                    PUSH string "PAUSED"; # string : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                # sp.verify((self.data.approvals[sp.sender].get(params.spender, default_value = 0) == 0) | (params.value == 0), 'UNSAFE_ALLOWANCE_CHANGE') # @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                PUSH nat 0; # nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DUP 3;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # pair (option address) (big_map address (map address nat)) : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CDR;        # big_map address (map address nat) : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                SENDER;     # @sender : big_map address (map address nat) : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                GET;        # option (map address nat) : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                IF_NONE
                  {
                    PUSH int 239; # int : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DUP 3;      # @parameter%approve : @some : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # address : @some : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                GET;        # option nat : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                IF_NONE
                  {
                    PUSH nat 0; # nat : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }
                  {}; # nat : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                COMPARE;    # int : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                EQ;         # bool : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                IF
                  {
                    PUSH bool True; # bool : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }
                  {
                    DUP;        # @parameter%approve : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CDR;        # nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    PUSH nat 0; # nat : nat : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    COMPARE;    # int : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    EQ;         # bool : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }; # bool : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                IF
                  {}
                  {
                    PUSH string "UNSAFE_ALLOWANCE_CHANGE"; # string : @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    FAILWITH;   # FAILED
                  }; # @parameter%approve : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%approve
                # self.data.approvals[sp.sender][params.spender] = params.value # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%approve
                UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                DUP;        # big_map address (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                SENDER;     # @sender : big_map address (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                DUP;        # @sender : @sender : big_map address (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                DUG 2;      # @sender : big_map address (map address nat) : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                GET;        # option (map address nat) : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                IF_NONE
                  {
                    PUSH int 241; # int : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                DUP 7;      # @parameter%approve : @some : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                CDR;        # nat : @some : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                SOME;       # option nat : @some : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                DIG 7;      # @parameter%approve : option nat : @some : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                CAR;        # address : option nat : @some : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                UPDATE;     # map address nat : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SOME;       # option (map address nat) : @sender : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # @sender : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                NIL operation; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
              }
              {
                IF_LEFT
                  {
                    DROP;       # @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @storage
                    DROP;       # @storage
                    # == disableMinting ==
                    # sp.verify(self.data.administrator == sp.some(sp.sender), 'NOT_ADMINISTRATOR') # @storage
                    SENDER;     # @sender : @storage
                    SOME;       # option address : @storage
                    SWAP;       # @storage : option address
                    DUP;        # @storage : @storage : option address
                    DUG 2;      # @storage : option address : @storage
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @storage
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : option address : @storage
                    CAR;        # option address : option address : @storage
                    COMPARE;    # int : @storage
                    EQ;         # bool : @storage
                    IF
                      {}
                      {
                        PUSH string "NOT_ADMINISTRATOR"; # string : @storage
                        FAILWITH;   # FAILED
                      }; # @storage
                    # self.data.mintingDisabled = True # @storage
                    UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    SWAP;       # pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))
                    UNPAIR;     # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))
                    CDR;        # big_map address nat : pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))
                    PUSH bool True; # bool : big_map address nat : pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))
                    PAIR;       # pair bool (big_map address nat) : pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))
                    PAIR;       # pair (pair bool (big_map address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))
                    SWAP;       # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair bool (big_map address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair (pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair bool (big_map address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    NIL operation; # list operation : pair (pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair bool (big_map address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }
                  {
                    DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getAdministrator : @storage
                    DROP;       # @parameter%getAdministrator : @storage
                    SWAP;       # @storage : @parameter%getAdministrator
                    # == getAdministrator ==
                    # sp.result(self.data.administrator) # @storage : @parameter%getAdministrator
                    DUP;        # @storage : @storage : @parameter%getAdministrator
                    DUG 2;      # @storage : @parameter%getAdministrator : @storage
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%getAdministrator : @storage
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : @parameter%getAdministrator : @storage
                    CAR;        # option address : @parameter%getAdministrator : @storage
                    # sp.transfer(__s111.value, sp.tez(0), sp.snd(params)) # option address : @parameter%getAdministrator : @storage
                    NIL operation; # list operation : option address : @parameter%getAdministrator : @storage
                    DIG 2;      # @parameter%getAdministrator : list operation : option address : @storage
                    CDR;        # contract (option address) : list operation : option address : @storage
                    PUSH mutez 0; # mutez : contract (option address) : list operation : option address : @storage
                    DIG 3;      # option address : mutez : contract (option address) : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : pair (pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair bool (big_map address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
              }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair bool (big_map address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
          }
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getAllowance : @storage
                DROP;       # @parameter%getAllowance : @storage
                SWAP;       # @storage : @parameter%getAllowance
                # == getAllowance ==
                # if ~ (self.data.balances.contains(sp.fst(params).owner)): # @storage : @parameter%getAllowance
                DUP;        # @storage : @storage : @parameter%getAllowance
                DUG 2;      # @storage : @parameter%getAllowance : @storage
                CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%getAllowance : @storage
                GET 3;      # big_map address nat : @parameter%getAllowance : @storage
                SWAP;       # @parameter%getAllowance : big_map address nat : @storage
                DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address nat : @storage
                DUG 2;      # @parameter%getAllowance : big_map address nat : @parameter%getAllowance : @storage
                CAR;        # pair (address %owner) (address %spender) : big_map address nat : @parameter%getAllowance : @storage
                CAR;        # address : big_map address nat : @parameter%getAllowance : @storage
                MEM;        # bool : @parameter%getAllowance : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%getAllowance
                    # self.data.balances[sp.fst(params).owner] = 0 # @storage : @parameter%getAllowance
                    UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    UNPAIR;     # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    SWAP;       # pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    PUSH (option nat) (Some 0); # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    DUP 6;      # @parameter%getAllowance : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    CAR;        # pair (address %owner) (address %spender) : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    CAR;        # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    SWAP;       # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    # self.data.approvals[sp.fst(params).owner] = {} # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    PUSH (option (map address nat)) (Some {}); # option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    DUP 6;      # @parameter%getAllowance : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    CAR;        # pair (address %owner) (address %spender) : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    CAR;        # address : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getAllowance
                    PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getAllowance
                    SWAP;       # @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }; # @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getAllowance
                # sp.result(self.data.approvals[sp.fst(params).owner].get(sp.fst(params).spender, default_value = 0)) # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getAllowance
                DUP;        # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getAllowance
                DUG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # pair (option address) (big_map address (map address nat)) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CDR;        # big_map address (map address nat) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                SWAP;       # @parameter%getAllowance : big_map address (map address nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (map address nat) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DUG 2;      # @parameter%getAllowance : big_map address (map address nat) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # pair (address %owner) (address %spender) : big_map address (map address nat) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # address : big_map address (map address nat) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                GET;        # option (map address nat) : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                IF_NONE
                  {
                    PUSH int 260; # int : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                SWAP;       # @parameter%getAllowance : @some : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DUP;        # @parameter%getAllowance : @parameter%getAllowance : @some : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DUG 2;      # @parameter%getAllowance : @some : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CAR;        # pair (address %owner) (address %spender) : @some : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CDR;        # address : @some : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                GET;        # option nat : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                IF_NONE
                  {
                    PUSH nat 0; # nat : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }
                  {}; # nat : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                # sp.transfer(__s112.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                NIL operation; # list operation : nat : @parameter%getAllowance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DIG 2;      # @parameter%getAllowance : list operation : nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CDR;        # contract nat : list operation : nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                PUSH mutez 0; # mutez : contract nat : list operation : nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                DIG 3;      # nat : mutez : contract nat : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                CONS;       # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getBalance : @storage
                    DROP;       # @parameter%getBalance : @storage
                    SWAP;       # @storage : @parameter%getBalance
                    # == getBalance ==
                    # if ~ (self.data.balances.contains(sp.fst(params))): # @storage : @parameter%getBalance
                    DUP;        # @storage : @storage : @parameter%getBalance
                    DUG 2;      # @storage : @parameter%getBalance : @storage
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%getBalance : @storage
                    GET 3;      # big_map address nat : @parameter%getBalance : @storage
                    SWAP;       # @parameter%getBalance : big_map address nat : @storage
                    DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address nat : @storage
                    DUG 2;      # @parameter%getBalance : big_map address nat : @parameter%getBalance : @storage
                    CAR;        # address : big_map address nat : @parameter%getBalance : @storage
                    MEM;        # bool : @parameter%getBalance : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%getBalance
                        # self.data.balances[sp.fst(params)] = 0 # @storage : @parameter%getBalance
                        UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        UNPAIR;     # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        SWAP;       # pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        PUSH (option nat) (Some 0); # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        DUP 6;      # @parameter%getBalance : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        CAR;        # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        SWAP;       # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        # self.data.approvals[sp.fst(params)] = {} # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        PUSH (option (map address nat)) (Some {}); # option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        DUP 6;      # @parameter%getBalance : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        CAR;        # address : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%getBalance
                        PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getBalance
                        SWAP;       # @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                      }; # @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getBalance
                    # sp.result(self.data.balances[sp.fst(params)]) # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getBalance
                    DUP;        # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getBalance
                    DUG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    GET 3;      # big_map address nat : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    SWAP;       # @parameter%getBalance : big_map address nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DUG 2;      # @parameter%getBalance : big_map address nat : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CAR;        # address : big_map address nat : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    GET;        # option nat : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    IF_NONE
                      {
                        PUSH int 253; # int : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    # sp.transfer(__s113.value, sp.tez(0), sp.snd(params)) # @some : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    NIL operation; # list operation : @some : @parameter%getBalance : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DIG 2;      # @parameter%getBalance : list operation : @some : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CDR;        # contract nat : list operation : @some : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    PUSH mutez 0; # mutez : contract nat : list operation : @some : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DIG 3;      # @some : mutez : contract nat : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CONS;       # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }
                  {
                    # == getPriorBalance ==
                    # sp.verify(sp.fst(params).level < sp.level, 'BLOCK_LEVEL_TOO_SOON') # @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    LEVEL;      # @level : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @parameter%getPriorBalance : @level : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : @level : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # @parameter%getPriorBalance : @level : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (address %address) (nat %level) : @level : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # nat : @level : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    COMPARE;    # int : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    LT;         # bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        PUSH string "BLOCK_LEVEL_TOO_SOON"; # string : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # if self.data.numCheckpoints.get(sp.fst(params).address, default_value = 0) == 0: # @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PUSH nat 0; # nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @storage : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # big_map address nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @parameter%getPriorBalance : big_map address nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (address %address) (nat %level) : big_map address nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH nat 0; # nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }
                      {}; # nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    COMPARE;    # int : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EQ;         # bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {
                        DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getPriorBalance : @storage
                        DROP;       # @parameter%getPriorBalance : @storage
                        # sp.result(sp.record(address = sp.fst(params).address, level = sp.fst(params).level, result = 0)) # @parameter%getPriorBalance : @storage
                        PUSH nat 0; # nat : @parameter%getPriorBalance : @storage
                        SWAP;       # @parameter%getPriorBalance : nat : @storage
                        DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : @storage
                        CAR;        # pair (address %address) (nat %level) : @parameter%getPriorBalance : nat : @storage
                        CDR;        # nat : @parameter%getPriorBalance : nat : @storage
                        SWAP;       # @parameter%getPriorBalance : nat : nat : @storage
                        DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : nat : @storage
                        DUG 3;      # @parameter%getPriorBalance : nat : nat : @parameter%getPriorBalance : @storage
                        CAR;        # pair (address %address) (nat %level) : nat : nat : @parameter%getPriorBalance : @storage
                        CAR;        # address : nat : nat : @parameter%getPriorBalance : @storage
                        PAIR 3;     # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                      }
                      {
                        # if self.data.checkpoints[(sp.fst(params).address, sp.as_nat(self.data.numCheckpoints[sp.fst(params).address] - 1))].fromBlock <= sp.fst(params).level: # @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (address %address) (nat %level) : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CDR;        # nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 3;      # @storage : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET 5;      # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PUSH nat 1; # nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 5;      # @storage : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET 3;      # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CDR;        # big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 5;      # @parameter%getPriorBalance : big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (address %address) (nat %level) : big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET;        # option nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF_NONE
                          {
                            PUSH int 141; # int : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SUB;        # int : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        ISNAT;      # option nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF_NONE
                          {
                            PUSH int 141; # int : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 4;      # @parameter%getPriorBalance : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (address %address) (nat %level) : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair address @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET;        # option (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF_NONE
                          {
                            PUSH int 141; # int : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        COMPARE;    # int : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        LE;         # bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF
                          {
                            DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getPriorBalance : @storage
                            DROP;       # @parameter%getPriorBalance : @storage
                            SWAP;       # @storage : @parameter%getPriorBalance
                            # sp.result(sp.record(address = sp.fst(params).address, level = sp.fst(params).level, result = self.data.checkpoints[(sp.fst(params).address, sp.as_nat(self.data.numCheckpoints[sp.fst(params).address] - 1))].balance)) # @storage : @parameter%getPriorBalance
                            DUP;        # @storage : @storage : @parameter%getPriorBalance
                            DUG 2;      # @storage : @parameter%getPriorBalance : @storage
                            CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%getPriorBalance : @storage
                            GET 5;      # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            PUSH nat 1; # nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            DUP 4;      # @storage : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            GET 3;      # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            CDR;        # big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            DUP 4;      # @parameter%getPriorBalance : big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            CAR;        # pair (address %address) (nat %level) : big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            CAR;        # address : big_map address nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            GET;        # option nat : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            IF_NONE
                              {
                                PUSH int 143; # int : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            SUB;        # int : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            ISNAT;      # option nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            IF_NONE
                              {
                                PUSH int 143; # int : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            DUP 3;      # @parameter%getPriorBalance : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            CAR;        # pair (address %address) (nat %level) : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            CAR;        # address : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            PAIR;       # pair address @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            GET;        # option (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                            IF_NONE
                              {
                                PUSH int 143; # int : @parameter%getPriorBalance : @storage
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : @parameter%getPriorBalance : @storage
                            CDR;        # nat : @parameter%getPriorBalance : @storage
                            SWAP;       # @parameter%getPriorBalance : nat : @storage
                            DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : @storage
                            CAR;        # pair (address %address) (nat %level) : @parameter%getPriorBalance : nat : @storage
                            CDR;        # nat : @parameter%getPriorBalance : nat : @storage
                            SWAP;       # @parameter%getPriorBalance : nat : nat : @storage
                            DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : nat : @storage
                            DUG 3;      # @parameter%getPriorBalance : nat : nat : @parameter%getPriorBalance : @storage
                            CAR;        # pair (address %address) (nat %level) : nat : nat : @parameter%getPriorBalance : @storage
                            CAR;        # address : nat : nat : @parameter%getPriorBalance : @storage
                            PAIR 3;     # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                          }
                          {
                            # if self.data.checkpoints[(sp.fst(params).address, 0)].fromBlock > sp.fst(params).level: # @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            CAR;        # pair (address %address) (nat %level) : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            CDR;        # nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            DUP 3;      # @storage : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            GET 5;      # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            PUSH nat 0; # nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            DUP 4;      # @parameter%getPriorBalance : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            CAR;        # pair (address %address) (nat %level) : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            CAR;        # address : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            PAIR;       # pair address nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            GET;        # option (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            IF_NONE
                              {
                                PUSH int 149; # int : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            CAR;        # nat : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            COMPARE;    # int : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            GT;         # bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            IF
                              {
                                DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getPriorBalance : @storage
                                DROP;       # @parameter%getPriorBalance : @storage
                                # sp.result(sp.record(address = sp.fst(params).address, level = sp.fst(params).level, result = 0)) # @parameter%getPriorBalance : @storage
                                PUSH nat 0; # nat : @parameter%getPriorBalance : @storage
                                SWAP;       # @parameter%getPriorBalance : nat : @storage
                                DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : @storage
                                CAR;        # pair (address %address) (nat %level) : @parameter%getPriorBalance : nat : @storage
                                CDR;        # nat : @parameter%getPriorBalance : nat : @storage
                                SWAP;       # @parameter%getPriorBalance : nat : nat : @storage
                                DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : nat : @storage
                                DUG 3;      # @parameter%getPriorBalance : nat : nat : @parameter%getPriorBalance : @storage
                                CAR;        # pair (address %address) (nat %level) : nat : nat : @parameter%getPriorBalance : @storage
                                CAR;        # address : nat : nat : @parameter%getPriorBalance : @storage
                                PAIR 3;     # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                              }
                              {
                                # centerIsNeedle = sp.local("centerIsNeedle", False) # @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                PUSH bool False; # bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                # center = sp.local("center", 0) # bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                PUSH nat 0; # nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                # lower = sp.local("lower", 0) # nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                PUSH nat 0; # nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                # upper = sp.local("upper", sp.as_nat(self.data.numCheckpoints[sp.fst(params).address] - 1)) # nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                PUSH nat 1; # nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUP 6;      # @storage : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                GET 3;      # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                CDR;        # big_map address nat : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUP 6;      # @parameter%getPriorBalance : big_map address nat : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                CAR;        # pair (address %address) (nat %level) : big_map address nat : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                CAR;        # address : big_map address nat : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                GET;        # option nat : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                IF_NONE
                                  {
                                    PUSH int 160; # int : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                SUB;        # int : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                ISNAT;      # option nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                IF_NONE
                                  {
                                    PUSH int 160; # int : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                SWAP;       # nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                # while (upper.value > lower.value) & (centerIsNeedle.value == False) : ... # nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUP;        # nat : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUG 2;      # nat : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                SWAP;       # @some : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUP;        # @some : @some : nat : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUG 2;      # @some : nat : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                COMPARE;    # int : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                GT;         # bool : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                IF
                                  {
                                    PUSH bool False; # bool : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP 5;      # bool : bool : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    COMPARE;    # int : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    EQ;         # bool : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                  }
                                  {
                                    PUSH bool False; # bool : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                  }; # bool : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                LOOP
                                  {
                                    DIG 2;      # nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DROP;       # @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    # center.value = sp.as_nat(upper.value - (sp.as_nat(upper.value - lower.value) // 2)) # @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    PUSH nat 2; # nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP 3;      # nat : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP 3;      # @some : nat : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    SUB;        # int : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    ISNAT;      # option nat : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    IF_NONE
                                      {
                                        PUSH int 164; # int : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        FAILWITH;   # FAILED
                                      }
                                      {}; # @some : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    EDIV;       # option (pair nat nat) : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    IF_NONE
                                      {
                                        PUSH int 164; # int : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        FAILWITH;   # FAILED
                                      }
                                      {
                                        CAR;        # nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                      }; # nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    SWAP;       # @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP;        # @some : @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUG 2;      # @some : nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    SUB;        # int : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    ISNAT;      # option nat : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    IF_NONE
                                      {
                                        PUSH int 164; # int : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        FAILWITH;   # FAILED
                                      }
                                      {}; # @some : @some : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUG 2;      # @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    # if self.data.checkpoints[(sp.fst(params).address, center.value)].fromBlock == sp.fst(params).level: # @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP 5;      # @parameter%getPriorBalance : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    CAR;        # pair (address %address) (nat %level) : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    CDR;        # nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP 7;      # @storage : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    GET 5;      # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP 5;      # @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP 8;      # @parameter%getPriorBalance : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    CAR;        # pair (address %address) (nat %level) : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    CAR;        # address : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    PAIR;       # pair address @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    GET;        # option (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    IF_NONE
                                      {
                                        PUSH int 167; # int : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        FAILWITH;   # FAILED
                                      }
                                      {}; # @some : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    CAR;        # nat : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    COMPARE;    # int : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    EQ;         # bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    IF
                                      {
                                        DIG 3;      # bool : @some : nat : @some : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        DROP;       # @some : nat : @some : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        # centerIsNeedle.value = True # @some : nat : @some : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        PUSH bool True; # bool : @some : nat : @some : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        DUG 3;      # @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                      }
                                      {
                                        # if self.data.checkpoints[(sp.fst(params).address, center.value)].fromBlock < sp.fst(params).level: # @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        DUP 5;      # @parameter%getPriorBalance : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        CAR;        # pair (address %address) (nat %level) : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        CDR;        # nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        DUP 7;      # @storage : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        GET 5;      # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        DUP 5;      # @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        DUP 8;      # @parameter%getPriorBalance : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        CAR;        # pair (address %address) (nat %level) : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        CAR;        # address : @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        PAIR;       # pair address @some : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        GET;        # option (pair (nat %fromBlock) (nat %balance)) : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        IF_NONE
                                          {
                                            PUSH int 170; # int : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            FAILWITH;   # FAILED
                                          }
                                          {}; # @some : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        CAR;        # nat : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        COMPARE;    # int : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        LT;         # bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        IF
                                          {
                                            SWAP;       # nat : @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            DROP;       # @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            SWAP;       # @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            # lower.value = center.value # @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            DUP;        # @some : @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            DUG 2;      # @some : @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            SWAP;       # @some : @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                          }
                                          {
                                            DROP;       # nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            # upper.value = sp.as_nat(center.value - 1) # nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            PUSH nat 1; # nat : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            DUP 3;      # @some : nat : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            SUB;        # int : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            ISNAT;      # option nat : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                            IF_NONE
                                              {
                                                PUSH int 173; # int : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                                FAILWITH;   # FAILED
                                              }
                                              {}; # @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                          }; # @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                      }; # @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    SWAP;       # nat : @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    # check for next loop: (upper.value > lower.value) & (centerIsNeedle.value == False) # nat : @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP;        # nat : nat : @some : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUG 2;      # nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    SWAP;       # @some : nat : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUP;        # @some : @some : nat : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DUG 2;      # @some : nat : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    COMPARE;    # int : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    GT;         # bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    IF
                                      {
                                        PUSH bool False; # bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        DUP 5;      # bool : bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        COMPARE;    # int : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                        EQ;         # bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                      }
                                      {
                                        PUSH bool False; # bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                      }; # bool : @some : nat : @some : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                  }; # @some : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DROP;       # nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                # if centerIsNeedle.value == True: # nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                PUSH bool True; # bool : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUP 4;      # bool : bool : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                COMPARE;    # int : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                EQ;         # bool : nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                IF
                                  {
                                    DROP;       # nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    SWAP;       # bool : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DROP;       # nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DIG 3;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : nat : @parameter%getPriorBalance : @storage
                                    DROP;       # nat : @parameter%getPriorBalance : @storage
                                    # sp.result(sp.record(address = sp.fst(params).address, level = sp.fst(params).level, result = self.data.checkpoints[(sp.fst(params).address, center.value)].balance)) # nat : @parameter%getPriorBalance : @storage
                                    DUP 3;      # @storage : nat : @parameter%getPriorBalance : @storage
                                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @parameter%getPriorBalance : @storage
                                    GET 5;      # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage
                                    SWAP;       # nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    DUP 3;      # @parameter%getPriorBalance : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    CAR;        # pair (address %address) (nat %level) : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    CAR;        # address : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    PAIR;       # pair address nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    GET;        # option (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    IF_NONE
                                      {
                                        PUSH int 179; # int : @parameter%getPriorBalance : @storage
                                        FAILWITH;   # FAILED
                                      }
                                      {}; # @some : @parameter%getPriorBalance : @storage
                                    CDR;        # nat : @parameter%getPriorBalance : @storage
                                    SWAP;       # @parameter%getPriorBalance : nat : @storage
                                    DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : @storage
                                    CAR;        # pair (address %address) (nat %level) : @parameter%getPriorBalance : nat : @storage
                                    CDR;        # nat : @parameter%getPriorBalance : nat : @storage
                                    SWAP;       # @parameter%getPriorBalance : nat : nat : @storage
                                    DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : nat : @storage
                                    DUG 3;      # @parameter%getPriorBalance : nat : nat : @parameter%getPriorBalance : @storage
                                    CAR;        # pair (address %address) (nat %level) : nat : nat : @parameter%getPriorBalance : @storage
                                    CAR;        # address : nat : nat : @parameter%getPriorBalance : @storage
                                    PAIR 3;     # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                                  }
                                  {
                                    SWAP;       # nat : nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DROP;       # nat : bool : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    SWAP;       # bool : nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DROP;       # nat : @parameter%getPriorBalance : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    DIG 3;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : nat : @parameter%getPriorBalance : @storage
                                    DROP;       # nat : @parameter%getPriorBalance : @storage
                                    # sp.result(sp.record(address = sp.fst(params).address, level = sp.fst(params).level, result = self.data.checkpoints[(sp.fst(params).address, lower.value)].balance)) # nat : @parameter%getPriorBalance : @storage
                                    DUP 3;      # @storage : nat : @parameter%getPriorBalance : @storage
                                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @parameter%getPriorBalance : @storage
                                    GET 5;      # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : nat : @parameter%getPriorBalance : @storage
                                    SWAP;       # nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    DUP 3;      # @parameter%getPriorBalance : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    CAR;        # pair (address %address) (nat %level) : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    CAR;        # address : nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    PAIR;       # pair address nat : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    GET;        # option (pair (nat %fromBlock) (nat %balance)) : @parameter%getPriorBalance : @storage
                                    IF_NONE
                                      {
                                        PUSH int 188; # int : @parameter%getPriorBalance : @storage
                                        FAILWITH;   # FAILED
                                      }
                                      {}; # @some : @parameter%getPriorBalance : @storage
                                    CDR;        # nat : @parameter%getPriorBalance : @storage
                                    SWAP;       # @parameter%getPriorBalance : nat : @storage
                                    DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : @storage
                                    CAR;        # pair (address %address) (nat %level) : @parameter%getPriorBalance : nat : @storage
                                    CDR;        # nat : @parameter%getPriorBalance : nat : @storage
                                    SWAP;       # @parameter%getPriorBalance : nat : nat : @storage
                                    DUP;        # @parameter%getPriorBalance : @parameter%getPriorBalance : nat : nat : @storage
                                    DUG 3;      # @parameter%getPriorBalance : nat : nat : @parameter%getPriorBalance : @storage
                                    CAR;        # pair (address %address) (nat %level) : nat : nat : @parameter%getPriorBalance : @storage
                                    CAR;        # address : nat : nat : @parameter%getPriorBalance : @storage
                                    PAIR 3;     # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                                  }; # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                              }; # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                          }; # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                      }; # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                    # sp.transfer(__s114.value, sp.tez(0), sp.snd(params)) # pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                    NIL operation; # list operation : pair address (pair nat nat) : @parameter%getPriorBalance : @storage
                    DIG 2;      # @parameter%getPriorBalance : list operation : pair address (pair nat nat) : @storage
                    CDR;        # contract (pair (address %address) (pair (nat %level) (nat %result))) : list operation : pair address (pair nat nat) : @storage
                    PUSH mutez 0; # mutez : contract (pair (address %address) (pair (nat %level) (nat %result))) : list operation : pair address (pair nat nat) : @storage
                    DIG 3;      # pair address (pair nat nat) : mutez : contract (pair (address %address) (pair (nat %level) (nat %result))) : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
              }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
          }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair bool (big_map address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getTotalSupply : @storage
                DROP;       # @parameter%getTotalSupply : @storage
                SWAP;       # @storage : @parameter%getTotalSupply
                # == getTotalSupply ==
                # sp.result(self.data.totalSupply) # @storage : @parameter%getTotalSupply
                DUP;        # @storage : @storage : @parameter%getTotalSupply
                DUG 2;      # @storage : @parameter%getTotalSupply : @storage
                GET 8;      # nat : @parameter%getTotalSupply : @storage
                # sp.transfer(__s115.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getTotalSupply : @storage
                NIL operation; # list operation : nat : @parameter%getTotalSupply : @storage
                DIG 2;      # @parameter%getTotalSupply : list operation : nat : @storage
                CDR;        # contract nat : list operation : nat : @storage
                PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                DIG 3;      # nat : mutez : contract nat : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    # == mint ==
                    # sp.verify(self.data.mintingDisabled == False, 'NOT_ALLOWED') # @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PUSH bool False; # bool : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @storage : bool : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : bool : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # bool : bool : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    COMPARE;    # int : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EQ;         # bool : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        PUSH string "NOT_ALLOWED"; # string : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # sp.verify(self.data.administrator == sp.some(sp.sender), 'NOT_ADMINISTRATOR') # @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SENDER;     # @sender : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SOME;       # option address : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @storage : option address : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : option address : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # option address : option address : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    COMPARE;    # int : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EQ;         # bool : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        PUSH string "NOT_ADMINISTRATOR"; # string : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @storage : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # if ~ (self.data.balances.contains(params.address)): # @storage : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @storage : @storage : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # @storage : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address nat : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @parameter%mint : big_map address nat : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @parameter%mint : @parameter%mint : big_map address nat : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # @parameter%mint : big_map address nat : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    MEM;        # bool : @parameter%mint : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # self.data.balances[params.address] = 0 # @storage : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PUSH (option nat) (Some 0); # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 6;      # @parameter%mint : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # self.data.approvals[params.address] = {} # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PUSH (option (map address nat)) (Some {}); # option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 6;      # @parameter%mint : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }; # @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # self.data.balances[params.address] += params.value # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 6;      # @parameter%mint : big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # address : address : big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # address : big_map address nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH int 283; # int : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 7;      # @parameter%mint : @some : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # nat : @some : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    ADD;        # nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SOME;       # option nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # self.data.totalSupply += params.value # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 8;      # nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @parameter%mint : nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # nat : nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    ADD;        # nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UPDATE 8;   # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%mint : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # compute_token_288 = sp.local("compute_token_288", self.writeCheckpoint(sp.record(checkpointedAddress = params.address, numCheckpoints = self.data.numCheckpoints.get(params.address, default_value = 0), newBalance = self.data.balances[params.address]))) # @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    NIL operation; # list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 3;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DUP 4;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    GET 3;      # big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DUP 4;      # @parameter%mint : big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CAR;        # address : big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    GET;        # option nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    IF_NONE
                      {
                        PUSH int 292; # int : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DUP 5;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    GET 3;      # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CDR;        # big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DUP 5;      # @parameter%mint : big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CAR;        # address : big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    GET;        # option nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    IF_NONE
                      {
                        PUSH nat 0; # nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                      }
                      {}; # nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%mint : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DIG 4;      # @parameter%mint : nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    CAR;        # address : nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    PAIR 3;     # pair address (pair nat @some) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    SWAP;       # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair address (pair nat @some) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    DUG 3;      # pair address (pair nat @some) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR 3;     # pair (pair address (pair nat @some)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EXEC;       # pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UNPAIR;     # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }
                  {
                    DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setAdministrator : @storage
                    DROP;       # @parameter%setAdministrator : @storage
                    # == setAdministrator ==
                    # sp.verify(self.data.administrator == sp.some(sp.sender), 'NOT_ADMINISTRATOR') # @parameter%setAdministrator : @storage
                    SENDER;     # @sender : @parameter%setAdministrator : @storage
                    SOME;       # option address : @parameter%setAdministrator : @storage
                    DUP 3;      # @storage : option address : @parameter%setAdministrator : @storage
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @parameter%setAdministrator : @storage
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : option address : @parameter%setAdministrator : @storage
                    CAR;        # option address : option address : @parameter%setAdministrator : @storage
                    COMPARE;    # int : @parameter%setAdministrator : @storage
                    EQ;         # bool : @parameter%setAdministrator : @storage
                    IF
                      {}
                      {
                        PUSH string "NOT_ADMINISTRATOR"; # string : @parameter%setAdministrator : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setAdministrator : @storage
                    SWAP;       # @storage : @parameter%setAdministrator
                    # self.data.administrator = params # @storage : @parameter%setAdministrator
                    UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%setAdministrator
                    UNPAIR;     # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%setAdministrator
                    CDR;        # big_map address (map address nat) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%setAdministrator
                    DIG 3;      # @parameter%setAdministrator : big_map address (map address nat) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair @parameter%setAdministrator (big_map address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair (pair @parameter%setAdministrator (big_map address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair (pair (pair @parameter%setAdministrator (big_map address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                    NIL operation; # list operation : pair (pair (pair @parameter%setAdministrator (big_map address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
              }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setPause : @storage
                    DROP;       # @parameter%setPause : @storage
                    # == setPause ==
                    # sp.verify(self.data.administrator == sp.some(sp.sender), 'NOT_ADMINISTRATOR') # @parameter%setPause : @storage
                    SENDER;     # @sender : @parameter%setPause : @storage
                    SOME;       # option address : @parameter%setPause : @storage
                    DUP 3;      # @storage : option address : @parameter%setPause : @storage
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @parameter%setPause : @storage
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : option address : @parameter%setPause : @storage
                    CAR;        # option address : option address : @parameter%setPause : @storage
                    COMPARE;    # int : @parameter%setPause : @storage
                    EQ;         # bool : @parameter%setPause : @storage
                    IF
                      {}
                      {
                        PUSH string "NOT_ADMINISTRATOR"; # string : @parameter%setPause : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%setPause : @storage
                    # self.data.paused = params # @parameter%setPause : @storage
                    UPDATE 5;   # @storage
                    NIL operation; # list operation : @storage
                  }
                  {
                    # == transfer ==
                    # sp.verify((self.data.administrator == sp.some(sp.sender)) | ((~ self.data.paused) & ((params.from_ == sp.sender) | (self.data.approvals[params.from_][sp.sender] >= params.value))), 'NOT_ALLOWED') # @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SENDER;     # @sender : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SOME;       # option address : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @storage : option address : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : option address : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # option address : option address : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    COMPARE;    # int : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EQ;         # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {
                        PUSH bool True; # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }
                      {
                        SWAP;       # @storage : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP;        # @storage : @storage : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUG 2;      # @storage : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET 5;      # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF
                          {
                            PUSH bool False; # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                          }
                          {
                            DUP;        # @parameter%transfer : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            CAR;        # address : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            SENDER;     # @sender : address : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            COMPARE;    # int : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            EQ;         # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            IF
                              {
                                PUSH bool True; # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                              }
                              {
                                DUP;        # @parameter%transfer : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                GET 4;      # nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUP 3;      # @storage : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                CDR;        # big_map address (map address nat) : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                DUP 3;      # @parameter%transfer : big_map address (map address nat) : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                CAR;        # address : big_map address (map address nat) : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                GET;        # option (map address nat) : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                IF_NONE
                                  {
                                    PUSH int 200; # int : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                SENDER;     # @sender : @some : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                GET;        # option nat : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                IF_NONE
                                  {
                                    PUSH int 200; # int : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                    FAILWITH;   # FAILED
                                  }
                                  {}; # @some : nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                COMPARE;    # int : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                                GE;         # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                              }; # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                          }; # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }; # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        PUSH string "NOT_ALLOWED"; # string : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @storage : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # if ~ (self.data.balances.contains(params.to_)): # @storage : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @storage : @storage : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # @storage : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @parameter%transfer : big_map address nat : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address nat : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # @parameter%transfer : big_map address nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # address : big_map address nat : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    MEM;        # bool : @parameter%transfer : @storage : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # self.data.balances[params.to_] = 0 # @storage : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PUSH (option nat) (Some 0); # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 6;      # @parameter%transfer : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET 3;      # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # self.data.approvals[params.to_] = {} # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PUSH (option (map address nat)) (Some {}); # option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 6;      # @parameter%transfer : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET 3;      # address : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }; # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # if ~ (self.data.balances.contains(params.from_)): # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @parameter%transfer : big_map address nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @parameter%transfer : @parameter%transfer : big_map address nat : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # @parameter%transfer : big_map address nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    MEM;        # bool : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # self.data.balances[params.from_] = 0 # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PUSH (option nat) (Some 0); # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 6;      # @parameter%transfer : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # self.data.approvals[params.from_] = {} # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PUSH (option (map address nat)) (Some {}); # option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 6;      # @parameter%transfer : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }; # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # sp.verify(self.data.balances[params.from_] >= params.value, 'LOW_BALANCE') # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @parameter%transfer : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 4;      # nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address nat : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @parameter%transfer : big_map address nat : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option nat : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH int 206; # int : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    COMPARE;    # int : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GE;         # bool : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {}
                      {
                        PUSH string "LOW_BALANCE"; # string : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }; # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # self.data.balances[params.from_] = sp.as_nat(self.data.balances[params.from_] - params.value) # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 5;      # @parameter%transfer : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 4;      # nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 6;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address nat : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 7;      # @parameter%transfer : big_map address nat : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option nat : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH int 207; # int : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SUB;        # int : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    ISNAT;      # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH int 207; # int : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SOME;       # option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 6;      # @parameter%transfer : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # self.data.balances[params.to_] += params.value # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 6;      # @parameter%transfer : big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # address : big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # address : address : big_map address nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 2;      # address : big_map address nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH int 208; # int : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 7;      # @parameter%transfer : @some : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 4;      # nat : @some : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    ADD;        # nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SOME;       # option nat : address : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # address : option nat : big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UPDATE;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR;       # pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option address) (big_map address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # if (params.from_ != sp.sender) & (~ (self.data.administrator == sp.some(sp.sender))): # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # @parameter%transfer : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SENDER;     # @sender : address : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    COMPARE;    # int : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    NEQ;        # bool : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {
                        SENDER;     # @sender : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SOME;       # option address : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 3;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : option address : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (option address) (big_map address (map address nat)) : option address : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # option address : option address : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        COMPARE;    # int : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        NEQ;        # bool : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }
                      {
                        PUSH bool False; # bool : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }; # bool : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {
                        SWAP;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # self.data.approvals[params.from_][sp.sender] = sp.as_nat(self.data.approvals[params.from_][sp.sender] - params.value) # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP;        # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UNPAIR;     # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP;        # big_map address (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 6;      # @parameter%transfer : big_map address (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : big_map address (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP;        # address : address : big_map address (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUG 2;      # address : big_map address (map address nat) : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET;        # option (map address nat) : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF_NONE
                          {
                            PUSH int 210; # int : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 7;      # @parameter%transfer : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET 4;      # nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DIG 8;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # pair (option address) (big_map address (map address nat)) : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CDR;        # big_map address (map address nat) : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DUP 9;      # @parameter%transfer : big_map address (map address nat) : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        CAR;        # address : big_map address (map address nat) : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET;        # option (map address nat) : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF_NONE
                          {
                            PUSH int 210; # int : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SENDER;     # @sender : @some : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        GET;        # option nat : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF_NONE
                          {
                            PUSH int 210; # int : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SUB;        # int : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        ISNAT;      # option nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        IF_NONE
                          {
                            PUSH int 210; # int : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SOME;       # option nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SENDER;     # @sender : option nat : @some : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # map address nat : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SOME;       # option (map address nat) : address : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # address : option (map address nat) : big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        UPDATE;     # big_map address (map address nat) : option address : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # option address : big_map address (map address nat) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (option address) (big_map address (map address nat)) : pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        PAIR;       # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        SWAP;       # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }
                      {}; # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # compute_token_214 = sp.local("compute_token_214", self.writeCheckpoint(sp.record(checkpointedAddress = params.from_, numCheckpoints = self.data.numCheckpoints.get(params.from_, default_value = 0), newBalance = self.data.balances[params.from_]))) # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    NIL operation; # list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 4;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 4;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 4;      # @parameter%transfer : big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH int 218; # int : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 5;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # pair (bool %mintingDisabled) (big_map %numCheckpoints address nat) : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 5;      # @parameter%transfer : big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH nat 0; # nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }
                      {}; # nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 5;      # @parameter%transfer : nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR 3;     # pair address (pair nat @some) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair address (pair nat @some) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 4;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair address (pair nat @some) : list operation : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 3;      # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair address (pair nat @some) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 3;      # pair address (pair nat @some) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR 3;     # pair (pair address (pair nat @some)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EXEC;       # pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : @parameter%transfer : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 3;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : @parameter%transfer
                    DIG 2;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer
                    DIG 3;      # @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation
                    DIG 3;      # list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # compute_token_222 = sp.local("compute_token_222", self.writeCheckpoint(sp.record(checkpointedAddress = params.to_, numCheckpoints = self.data.numCheckpoints.get(params.to_, default_value = 0), newBalance = self.data.balances[params.to_]))) # list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 3;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 4;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CAR;        # pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 4;      # @parameter%transfer : big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # address : big_map address nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option nat : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_NONE
                      {
                        PUSH int 226; # int : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 5;      # pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # pair bool (big_map address nat) : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    CDR;        # big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUP 5;      # @parameter%transfer : big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # address : big_map address nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET;        # option nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    IF_NONE
                      {
                        PUSH nat 0; # nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                      }
                      {}; # nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : @parameter%transfer : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DIG 4;      # @parameter%transfer : nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    GET 3;      # address : nat : @some : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    PAIR 3;     # pair address (pair nat @some) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    SWAP;       # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair address (pair nat @some) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                    DUG 3;      # pair address (pair nat @some) : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR 3;     # pair (pair address (pair nat @some)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EXEC;       # pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))
                    CDR;        # pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UNPAIR;     # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
                  }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
              }
              {
                DIG 2;      # lambda (pair (pair address (pair nat nat)) (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair unit (pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter.right.right.right : @storage
                DROP;       # @parameter.right.right.right : @storage
                IF_LEFT
                  {
                    # == updateContractMetadata ==
                    # sp.verify(self.data.administrator == sp.some(sp.sender), 'NOT_ADMINISTRATOR') # @parameter%updateContractMetadata : @storage
                    SENDER;     # @sender : @parameter%updateContractMetadata : @storage
                    SOME;       # option address : @parameter%updateContractMetadata : @storage
                    DUP 3;      # @storage : option address : @parameter%updateContractMetadata : @storage
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @parameter%updateContractMetadata : @storage
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : option address : @parameter%updateContractMetadata : @storage
                    CAR;        # option address : option address : @parameter%updateContractMetadata : @storage
                    COMPARE;    # int : @parameter%updateContractMetadata : @storage
                    EQ;         # bool : @parameter%updateContractMetadata : @storage
                    IF
                      {}
                      {
                        PUSH string "NOT_ADMINISTRATOR"; # string : @parameter%updateContractMetadata : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateContractMetadata : @storage
                    SWAP;       # @storage : @parameter%updateContractMetadata
                    # self.data.metadata[sp.fst(params)] = sp.snd(params) # @storage : @parameter%updateContractMetadata
                    UNPAIR;     # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    UNPAIR;     # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    SWAP;       # pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    UNPAIR;     # big_map address nat : pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    SWAP;       # pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    UNPAIR;     # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map string bytes : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    SWAP;       # big_map string bytes : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    DUP 6;      # @parameter%updateContractMetadata : big_map string bytes : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    CDR;        # bytes : big_map string bytes : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    SOME;       # option bytes : big_map string bytes : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%updateContractMetadata
                    DIG 6;      # @parameter%updateContractMetadata : option bytes : big_map string bytes : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    CAR;        # string : option bytes : big_map string bytes : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    UPDATE;     # big_map string bytes : big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    SWAP;       # big_map (pair address nat) (pair (nat %fromBlock) (nat %balance)) : big_map string bytes : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes) : big_map address nat : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    SWAP;       # big_map address nat : pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair (big_map address nat) (pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes)) : pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    SWAP;       # pair (option %administrator address) (big_map %approvals address (map address nat)) : pair (big_map address nat) (pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes)) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes))) : pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                    PAIR;       # pair (pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                  }
                  {
                    # == updateTokenMetadata ==
                    # sp.verify(self.data.administrator == sp.some(sp.sender), 'NOT_ADMINISTRATOR') # @parameter%updateTokenMetadata : @storage
                    SENDER;     # @sender : @parameter%updateTokenMetadata : @storage
                    SOME;       # option address : @parameter%updateTokenMetadata : @storage
                    DUP 3;      # @storage : option address : @parameter%updateTokenMetadata : @storage
                    CAR;        # pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map %balances address nat) (pair (big_map %checkpoints (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map %metadata string bytes))) : option address : @parameter%updateTokenMetadata : @storage
                    CAR;        # pair (option %administrator address) (big_map %approvals address (map address nat)) : option address : @parameter%updateTokenMetadata : @storage
                    CAR;        # option address : option address : @parameter%updateTokenMetadata : @storage
                    COMPARE;    # int : @parameter%updateTokenMetadata : @storage
                    EQ;         # bool : @parameter%updateTokenMetadata : @storage
                    IF
                      {}
                      {
                        PUSH string "NOT_ADMINISTRATOR"; # string : @parameter%updateTokenMetadata : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%updateTokenMetadata : @storage
                    SWAP;       # @storage : @parameter%updateTokenMetadata
                    # self.data.token_metadata[0] = params # @storage : @parameter%updateTokenMetadata
                    DUP;        # @storage : @storage : @parameter%updateTokenMetadata
                    GET 7;      # big_map nat (pair (nat %token_id) (map %token_info string bytes)) : @storage : @parameter%updateTokenMetadata
                    DIG 2;      # @parameter%updateTokenMetadata : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : @storage
                    SOME;       # option (pair (nat %token_id) (map %token_info string bytes)) : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : @storage
                    PUSH nat 0; # nat : option (pair (nat %token_id) (map %token_info string bytes)) : big_map nat (pair (nat %token_id) (map %token_info string bytes)) : @storage
                    UPDATE;     # big_map nat (pair (nat %token_id) (map %token_info string bytes)) : @storage
                    UPDATE 7;   # @storage
                  }; # pair (pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                NIL operation; # list operation : pair (pair (pair (option %administrator address) (big_map %approvals address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair (nat %fromBlock) (nat %balance))) (big_map string bytes)))) (pair (pair (bool %mintingDisabled) (big_map %numCheckpoints address nat)) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
              }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
          }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
      }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
    NIL operation; # list operation : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
    SWAP;       # list operation : list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
    ITER
      {
        CONS;       # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
      }; # list operation : pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))
    PAIR;       # pair (list operation) (pair (pair (pair (option address) (big_map address (map address nat))) (pair (big_map address nat) (pair (big_map (pair address nat) (pair nat nat)) (big_map string bytes)))) (pair (pair bool (big_map address nat)) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
  };